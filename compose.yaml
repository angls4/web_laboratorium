version: '3'

services:
  database:
    image: postgres:16
    environment:
      POSTGRES_DB: web_laboratorium
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webnet

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    volumes:
      - staticfiles:/app/staticfiles
    # command: npm run build
    # entrypoint: ["/entrypoint.sh"]

  backend:
    build: .
    # command: gunicorn --bind 0.0.0.0:8000 web_laboratorium.wsgi:application
    volumes:
      - staticfiles:/app/staticfiles  # Named volume for static files
    # ports:
      # - "127.0.0.1:8000:8000"
    env_file:
      - .env
    
    # entrypoint: ["/app/entrypoint.sh"]
    depends_on:
      - frontend
      - database
    networks:
      - webnet

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: always
    volumes:
      - staticfiles:/usr/share/nginx/html/static  # Shared static volume for static files
      # - ./certs:/etc/letsencrypt  # Where certificates will be stored
      - /var/www/certbot:/var/www/certbot
      - certs:/etc/ssl
    ports:
      - "80:80"      # Expose HTTP on port 80 for ACME challenges and redirects
      - "443:443"    # Expose HTTPS on port 443 for secure connections
    depends_on:
      - backend
    networks:
      - webnet

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - /var/www/certbot:/var/www/certbot
  #     - certs:/etc
  #   entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'
  #   networks:
  #     - webnet

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /root/postgres_data
      o: bind
  
  staticfiles:


  certs:
    driver: local
    driver_opts:
      type: none
      device: ./certs
      o: bind

networks:
  webnet:


# docker run --rm -it \
#   -v ./certs/letsencrypt:/etc/letsencrypt \
#   -v /var/www/certbot:/var/www/certbot \
#   certbot/certbot certonly \
#   --webroot \
#   --webroot-path=/var/www/certbot \
#   -d labtiums.web.id -d www.labtiums.web.id
